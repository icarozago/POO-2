/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GraphicInterfaces;

import Main.Room;
import Main.Session;
import Utilities.ReserchUtilities;
import java.util.List;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Icaro
 */
public class SessionListing extends javax.swing.JFrame {

    /**
     * Creates new form SessionListing
     */
    public SessionListing() {
        initComponents();
        ReserchUtilities.findAllRoomsNumbers().forEach((room) -> comboBoxSala.addItem(room));
        fillTable(ReserchUtilities.findAllSessions());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        labelHorario = new javax.swing.JLabel();
        labelSala = new javax.swing.JLabel();
        textFieldHorario = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableSessao = new javax.swing.JTable();
        buttonLimparFiltros = new javax.swing.JButton();
        buttonAtualizar = new javax.swing.JButton();
        comboBoxSala = new javax.swing.JComboBox<>();
        buttonIncluir = new javax.swing.JButton();
        buttonEditar = new javax.swing.JButton();
        buttonExcluir = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel1.setText("Sess√µes");

        labelHorario.setText("Horario:");

        labelSala.setText("Sala:");

        tableSessao.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Horario", "Sala"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tableSessao);

        buttonLimparFiltros.setText("Limpar Filtros");
        buttonLimparFiltros.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonLimparFiltrosActionPerformed(evt);
            }
        });

        buttonAtualizar.setText("Atualizar");
        buttonAtualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonAtualizarActionPerformed(evt);
            }
        });

        comboBoxSala.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecionar" }));

        buttonIncluir.setText("Incluir");
        buttonIncluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonIncluirActionPerformed(evt);
            }
        });

        buttonEditar.setText("Editar");
        buttonEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonEditarActionPerformed(evt);
            }
        });

        buttonExcluir.setText("Excluir");
        buttonExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonExcluirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(labelSala)
                                    .addComponent(labelHorario))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(comboBoxSala, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(textFieldHorario)))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(buttonIncluir)
                                .addGap(18, 18, 18)
                                .addComponent(buttonEditar)
                                .addGap(18, 18, 18)
                                .addComponent(buttonExcluir)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(buttonAtualizar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(buttonLimparFiltros))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelHorario)
                            .addComponent(textFieldHorario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(comboBoxSala, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelSala))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(buttonIncluir)
                            .addComponent(buttonEditar)
                            .addComponent(buttonExcluir)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(buttonLimparFiltros)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(buttonAtualizar)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonIncluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonIncluirActionPerformed
        SessionWindowPanel sessionWindowPanel = createSessionWindowPanel(true);
        sessionWindowPanel.setVisible(true);
    }//GEN-LAST:event_buttonIncluirActionPerformed

    private void buttonEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonEditarActionPerformed
        SessionWindowPanel sessionWindowPanel = createSessionWindowPanel(false);
        sessionWindowPanel.setVisible(true);
    }//GEN-LAST:event_buttonEditarActionPerformed

    private void buttonExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonExcluirActionPerformed
        SessionWindowPanel sessionWindowPanel = createSessionWindowPanel(false);
        sessionWindowPanel.setVisible(true);
    }//GEN-LAST:event_buttonExcluirActionPerformed

    private void buttonLimparFiltrosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonLimparFiltrosActionPerformed
        textFieldHorario.setText("");
        comboBoxSala.setSelectedIndex(0);
    }//GEN-LAST:event_buttonLimparFiltrosActionPerformed

    private void buttonAtualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonAtualizarActionPerformed
        String scadule = null;
        Integer roomId = null;

        if (!textFieldHorario.getText().isEmpty()) {
            scadule = textFieldHorario.getText();
        }

        if (!comboBoxSala.getSelectedItem().toString().equals("Selecionar")) {
            roomId = ReserchUtilities.findRoomByNumber(Integer.parseInt(
                    comboBoxSala.getSelectedItem().toString())).getId();
        }

        List<Session> sessions = ReserchUtilities.findSessionsByParams(scadule, roomId);

        fillTable(sessions);
    }//GEN-LAST:event_buttonAtualizarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SessionListing.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SessionListing.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SessionListing.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SessionListing.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SessionListing().setVisible(true);
            }
        });
    }

    private SessionWindowPanel createSessionWindowPanel(boolean insert) {
        if (insert) {
            return new SessionWindowPanel();
        } else {
            Session session = new Session();

            session.setTime(tableSessao.getValueAt(
                    tableSessao.getSelectedRow(), 0).toString());
            session.setRoom(ReserchUtilities.findRoomByNumber(Integer.parseInt(
                    tableSessao.getValueAt(tableSessao.getSelectedRow(), 1).toString())));
            session.setId(ReserchUtilities.findSessionByParams(session.getTime(),
                    session.getRoom().getId()).getId());

            return new SessionWindowPanel(session);

        }
    }

    private void fillTable(List<Session> sessions) {

        DefaultTableModel defaultTableModel = (DefaultTableModel) tableSessao.getModel();

        while (tableSessao.getRowCount() > 0) {
            defaultTableModel.removeRow(0);
        }

        for (Session session : sessions) {

            Object row[] = new Object[3];
            row[0] = session.getTime();
            row[1] = session.getRoom().getNumber();

            defaultTableModel.addRow(row);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonAtualizar;
    private javax.swing.JButton buttonEditar;
    private javax.swing.JButton buttonExcluir;
    private javax.swing.JButton buttonIncluir;
    private javax.swing.JButton buttonLimparFiltros;
    private javax.swing.JComboBox<String> comboBoxSala;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labelHorario;
    private javax.swing.JLabel labelSala;
    private javax.swing.JTable tableSessao;
    private javax.swing.JTextField textFieldHorario;
    // End of variables declaration//GEN-END:variables
}
